server:
  port: 8111

spring:
  application:
    name: recommend-service
  datasource:
    url: jdbc:mysql://192.168.50.12:3306/pet
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
  data:
    mongodb:
      uri: mongodb://192.168.50.12:27017/pet
      auto-index-creation: true
  redis:
    source:
      host: 192.168.50.12
      port: 6379
      database: 2
    target:
      host: 192.168.50.12
      port: 6379
      database: 8
  kafka:
    bootstrap-servers: 192.168.50.12:9092
    consumer:
      group-id: my-group
      auto-offset-reset: earliest
    streams:
      application-id: my-kafka-streams-app
      properties:
        state-dir: /tmp/kafka-streams
  security:
    user:
      name: txt
      password: 123456
  cloud:
    consul:
      host: 192.168.50.233  # Consul 服务器地址
      port: 8500
      discovery:
        service-name: recommend-service
        instance-id: recommend-service-${random.value}
        health-check-interval: 10s  # 健康检查间隔
        health-check-critical-timeout: 1m # 设置 deregister_critical_service_after 参数，时间可按需调整
management:
  endpoints:
    web:
      exposure:
        include: prometheus,health,metrics
  endpoint:
    prometheus:
      enabled: true

logging:
  level:
    root: INFO              # 设置默认日志级别
  file:
    path: ./logs            # 日志文件的存储路径
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"  # 控制台输出格式
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n" # 文件输出格式


