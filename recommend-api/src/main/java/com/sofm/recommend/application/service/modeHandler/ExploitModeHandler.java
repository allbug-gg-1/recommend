package com.sofm.recommend.application.service.modeHandler;

import com.sofm.recommend.application.service.channelHandler.ChannelHandler;
import com.sofm.recommend.common.code.RecommendType;
import com.sofm.recommend.common.dto.RecommendContext;
import org.springframework.stereotype.Component;

import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

@Component
public class ExploitModeHandler extends AbstractModeHandler {
    @Override
    public RecommendType getRecommendType() {
        return RecommendType.Exploit;
    }

    @Override
    public int recall(RecommendContext context, Map<String, Set<String>> channelItems, int loadTime) {
        int totalCount = 0;
        for (String handlerKey : channelHandlers.keySet()) {
            ChannelHandler handler = channelHandlers.get(handlerKey);
            String key = handlerKey + "Handler";
            Set<String> items = channelItems.getOrDefault(key, new HashSet<>());
            List<String> channelResults = handler.load(context, loadTime);
            items.addAll(channelResults);
            channelItems.put(key, items);
            totalCount += items.size();
        }
        return totalCount;
    }
}
