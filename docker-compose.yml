version: '3.9'
services:
  consul:
    image: hashicorp/consul:1.16.2
    ports:
      - "8500:8500"      # Consul UI 访问端口
      - "8600:8600/udp"  # DNS 查询端口
    command: agent -dev -client=0.0.0.0 -bind=0.0.0.0
    networks:
      - app-network
    volumes:
      - consul_data:/consul/data
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_config_data:/data/configdb
    networks:
      - app-network
  redis:
    image: redislabs/rebloom:latest  # 使用带 RedisBloom 的官方镜像
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--loadmodule", "/usr/lib/redis/modules/redisbloom.so" ]
  gate-service:
    build: ./recommend-gateway
    ports:
      - "8112:8112"  # 将主机的8081端口映射到容器的8080端口
    networks:
      - app-network
    volumes:
      - gate_data:/app/recommend-gateway/logs
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - TZ=Asia/Shanghai
  api-service:
    build: ./recommend-api
    ports:
      - "8111:8111"  # 左边是主机端口 右边是容器端口
    networks:
      - app-network
    volumes:
      - api_data:/app/recommend-api/logs
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - TZ=Asia/Shanghai
  test-service:
    build: ./cloud-test
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - TZ=Asia/Shanghai

#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Prometheus 配置文件挂载
#    ports:
#      - "9090:9090"
#    networks:
#      - app-network
#
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    ports:
#      - "3000:3000"  # Grafana UI 访问端口
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=admin  # 设置默认管理员密码
#    networks:
#      - app-network

networks:
  app-network:
    driver: bridge  # 创建一个私有网络，供服务之间通信

volumes:
  gate_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Volumes/HIKSEMI/docker-recommend/gate
  api_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Volumes/HIKSEMI/docker-recommend/api
  consul_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Volumes/HIKSEMI/docker-recommend/consul
  mongo_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Volumes/HIKSEMI/docker-recommend/mongo/data
  mongo_config_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Volumes/HIKSEMI/docker-recommend/mongo/config
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Volumes/HIKSEMI/docker-recommend/redis

